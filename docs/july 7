Some thoughts: 

Solve deep explanatory, pragmatic, and aesthetic problems. 
Don't care what others think. 
Acknowledge the worst cases. 
Mandatory to fail regularly. 
Do exciting things. 
Let go of ego. 
Don't protect what you have (you don't have anything to protect.)
Be creative. 
Think from first principles. 
Be fast and decisive. 
Be the best person you can be. 

--
What are the three most important questions to answer? 
1. What next?
That's always the most important question, it seems to me. 

What are my options, and what do I want to accomplish? 
 - See above mission statement. 
Options: work with others sharing your mission. In academia, or industry. 

---
Design of arc chart music player. 
1. Highlight arc that contain current played moment
2. Allowed user to change playback position with cursor
3. Provide several different playback modes, based on different views. 
4. Offer non-linear views of song, based on parts. allow redesign of song.

--
Growth directions: 
----
If you decided to spend the rest of your life developing this application, what directions would you want to explore?
 - I'd cast the objective of the project as more than the creation of charts, and expand it to the broad understanding and analysis of music, often through visual means. 

There are a few basic things: 
 - more analysis methods 
 - automated analysis
 - better visualizations (3D, multicolored, animated, abstract)
 - more music
 - cross-track analysis (genre or artist)
 - business uses (creating beautiful, music-based engravings, sculptures, and paintings)

What are the next three steps? 
1. Complete basic one-track/instrument analysis workflow tool. 
2. Create a few static charts for songs
3. Use these graphics to produce prints or engravings

What are the more futuristic ideas you've got?
1. Automate analysis of raw audio. (rather than just midi)
2. Incorporate midi analysis
3. Join forces with other artists to create sculptures and things
4. Use this idea to guide other art projects
5. Create a new music-player based on arc chart visualization

--- TESTS
E2E

Symbol String and uses
---
What is the symbol string for? 
 - having separated the song into phrases, each phrase is given a symbol
What happen to the ss after it's generated? 
 - it's used to find the repeated substrings. it's easy enough to find repetitions of a phrase, but more challenging to find repetitions of multiple phrases. this is what the suffix tree is for. 
 - ultimately, I want to generate arcs. The arcs will depend on matches. Each match will take the following form: 
 match = {
 X: index of start of first matching substring
 Y: index of start of second matching substring
 L: length of match}

 The question is how to create the data structure, matches. 
 The first step is to find all repeated substrings, then to filter them based on the criteria specified in the acr diagram paper. 

--- how will the arc chart be generated? 
First, I'll separate the song into musical phrases, each with a phraseID. Then I'll create the symbol string by creating a list, or a string, from the phraseID values. Then I'll create a suffix tree for the string which will note all repeated substrings (or is it only the longest?). From there, I'll evaluate the substrings and create a list of those matches which satisfy the chart criteria. With those matches, I can then specify each arc.

How will arcs be specified from matches? 
 - Given a match, with X1, Y1, and L-->
 arc = {
 	center: X1.tn       (tn is normalized time. 1=end of song)
 }

 It seems to me there will be lots of intermediate data structures. 
Here they are. 
1. sectionTransitions
2. sections
3. phraseTransitions
4. phrases
5. symbol string (using phraseID from phrases)
6. ? something with suffix tree

Converting SVG into downloadable raster file like jpeg. ---
1. Draw svg on canvas using canvg
2. Convert canvas drawing into data url
3. Display an img tag with the data url as the source
4. Use file api to allow user to download raster file

The responsive svg will be drawn as normal (I'll have to see if it works on mobile, if I care). Then, if the user requests a raster format, all the above steps will be taken. 


potential jobs: http://www.creativeapplications.net/javascript-2/super-recursion-toy-javascript/

matt pearson
justin windle
http://www.liaworks.com/category/theprojects/

!!! http://abandonedart.org/?p=993 (spirograph, really cool)